<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Network on 희택의 노력</title>
        <link>https://heetaek.com/categories/network/</link>
        <description>Recent content in Network on 희택의 노력</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko-kr</language>
        <lastBuildDate>Mon, 20 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://heetaek.com/categories/network/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>[네트워크] 네트워크의 기본 규칙 (프로토콜, OSI 모델과 TCP/IP 모델)</title>
        <link>https://heetaek.com/p/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B7%9C%EC%B9%99-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C-osi-%EB%AA%A8%EB%8D%B8%EA%B3%BC-tcp/ip-%EB%AA%A8%EB%8D%B8/</link>
        <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
        
        <guid>https://heetaek.com/p/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B7%9C%EC%B9%99-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C-osi-%EB%AA%A8%EB%8D%B8%EA%B3%BC-tcp/ip-%EB%AA%A8%EB%8D%B8/</guid>
        <description>&lt;img src="https://user-images.githubusercontent.com/2377807/181749554-a06e6898-7f00-4daa-be9e-f84323b307d0.png" alt="Featured image of post [네트워크] 네트워크의 기본 규칙 (프로토콜, OSI 모델과 TCP/IP 모델)" /&gt;&lt;h2 id=&#34;프로토콜이란&#34;&gt;프로토콜이란?&lt;/h2&gt;
&lt;p&gt;일상생활에서 지켜야 하는 규칙이 있듯이, 네트워크에서도 문제없이 통신하려면 규칙을 지켜야한다.&lt;/p&gt;
&lt;p&gt;예를 들어 프랑스어를 못하는 한국인과 한국어를 못하는 프랑스인이 만나면 대화가 불가능하다.&lt;/p&gt;
&lt;p&gt;그러면 영어로 대화한다는 규칙을 정해 놓으면 문제없이 대화가 가능하다.&lt;/p&gt;
&lt;p&gt;이와 같은 규칙을 네트워크에서는 &lt;code&gt;프로토콜&lt;/code&gt; 이라고 한다.&lt;/p&gt;
&lt;p&gt;일상생활에서 접할 수 있는 편지를 예시로 들어보면&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;편지를 써서 우체통에 넣으면 우체부가 편지를 수거한다.&lt;/li&gt;
&lt;li&gt;수거한 편지는 우체국으로 가져가 분류한다.&lt;/li&gt;
&lt;li&gt;분류된 편지들은 우체부가 가까운 우체국으로 편지를 운송하고, 수신자들은 우편함에서 찾아간다.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;그러나 1 에서 편지를 쓰는 과정에서 주소를 적지 않았거나, 우표를 붙이지 않았다면 우체부는 수신처를 알 수 없으므로 가져다 줄 수 없다.&lt;/p&gt;
&lt;p&gt;이와 같이 편지가 전송되는 과정에는 &amp;lsquo;편지를 쓰는 규칙&amp;rsquo;, &amp;lsquo;편지를 보내는 규칙&amp;rsquo;, &amp;lsquo;우체국의 규칙&amp;rsquo; 등 여러가지 규칙이 있는데 서로 영향을 주지 않는다.&lt;/p&gt;
&lt;h2 id=&#34;osi-7-layers&#34;&gt;OSI 7 Layers&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2377807/174595245-9ae55395-4e0a-4fb5-ac55-c280aac78432.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;OSI 7 계층은 위와 같이 생겼다.&lt;/p&gt;
&lt;p&gt;저 OSI 7 계층이 왜 나왔냐면 지금은 생각조차 할 수 없지만 예전에는 같은 회사의 컴퓨터 끼리만 통신이 가능했다.&lt;/p&gt;
&lt;p&gt;예를 들어, Apple 과 Microsoft 사의 컴퓨터와는 통신이 불가능 했다.&lt;/p&gt;
&lt;p&gt;이런 일들이 있어서 공통으로 사용할 수 있는 표준 규격을 정해야만 했다.&lt;/p&gt;
&lt;p&gt;ISO 라는 국제표준화 기구가 있는데 이 단체에서 &lt;code&gt;OSI 모델&lt;/code&gt; 이라는 표준 규격을 제정했다.&lt;/p&gt;
&lt;p&gt;그럼 7계층은 왜 나누어 놨을까라는 의문이 생길수있는데 통신이 일어나는 과정을 단계별로 알 수 있고 특정한 곳에 이상이 생기면 그 단계만 수정할 수 있기 때문이라한다.&lt;/p&gt;
&lt;h3 id=&#34;osi-모델-각-계층의-역할&#34;&gt;OSI 모델 각 계층의 역할&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;계층&lt;/th&gt;
&lt;th&gt;이름&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;7계층&lt;/td&gt;
&lt;td&gt;애플리케이션 계층(Application Layer&lt;/td&gt;
&lt;td&gt;이메일 &amp;amp; 파일 전송, 웹 사이트 조회 등 애플리케이션에 대한 서비를 제공&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6계층&lt;/td&gt;
&lt;td&gt;프레젠테이션 계증(Presentation Layer)&lt;/td&gt;
&lt;td&gt;문자 코드, 압축, 암호화 등의 데이터를 변환&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5계층&lt;/td&gt;
&lt;td&gt;세션 계층(Session Layer)&lt;/td&gt;
&lt;td&gt;세션 체결, 통신 방식을 결정&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4계층&lt;/td&gt;
&lt;td&gt;전송 계층(Transport Layer)&lt;/td&gt;
&lt;td&gt;신뢰할 수 있는 통신을 구현&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3계층&lt;/td&gt;
&lt;td&gt;네트워크 계층(Network Layer)&lt;/td&gt;
&lt;td&gt;다른 네트워크와 통신하기 위한 경로 설정 및 논리 주소를 결정&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2계층&lt;/td&gt;
&lt;td&gt;데이터 링크 계층(Data Link Layer)&lt;/td&gt;
&lt;td&gt;네트워크 기기 간의 데이터 전송 및 물리 주소를 결정&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1계층&lt;/td&gt;
&lt;td&gt;물리 계층(Physical Layer)&lt;/td&gt;
&lt;td&gt;시스템 간의 물리적인 연결과 전기 신호를 변환 및 제어&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;서로 데이터를 주고 받을 때는&lt;/p&gt;
&lt;p&gt;데이터를 송신 할 때는 7계층에서부터 1계층까지 하위 계층으로 데이터를 전달 하고&lt;/p&gt;
&lt;p&gt;데이터를 수신 받을 때는 1계층에서부터 7계층까지 상위 계층으로 데이터를 전달한다.&lt;/p&gt;
&lt;p&gt;가끔 로드밸런싱에 관한 글을 보면 L4 , L7 이라는게 나오는데 4 와 7 이 네트워크 계층이라는걸 OSI7 을 보고 알았다.&lt;/p&gt;
&lt;h2 id=&#34;tcpip-모델&#34;&gt;TCP/IP 모델&lt;/h2&gt;
&lt;p&gt;TCP/IP 모델이란 7계층을 4계층으로 바꿔서 생각하면 이해하기 쉽다.&lt;/p&gt;
&lt;p&gt;아래 그림과 같이 4계층으로 이루어져있다.
&lt;img src=&#34;https://user-images.githubusercontent.com/2377807/174601775-dfaeed06-c49f-4d94-b0cc-059820233526.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;OSI 모델의 응용 계층, 표현 계층, 세션 계층이 TCP/IP 모델에서는 응용 계층으로 합쳐져 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Reference&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;모두의 네트워크&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gyoogle.dev/blog/computer-science/network/OSI%207%EA%B3%84%EC%B8%B5.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gyoogle.dev/blog/computer-science/network/OSI%207%EA%B3%84%EC%B8%B5.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>[Network] REST API란?</title>
        <link>https://heetaek.com/p/rest-api/</link>
        <pubDate>Sat, 29 Jan 2022 00:00:00 +0000</pubDate>
        
        <guid>https://heetaek.com/p/rest-api/</guid>
        <description>&lt;img src="https://user-images.githubusercontent.com/2377807/151964947-48b18c99-efb0-44fc-b442-ada8801e7a96.png" alt="Featured image of post [Network] REST API란?" /&gt;&lt;h1 id=&#34;rest&#34;&gt;REST?&lt;/h1&gt;
&lt;p&gt;우선 REST 에 대해서 알아야 합니다.
REST 란 웹에 존재하는 자원에 대해 고유한 URI 부여하는 방법입니다.
현재 가장 널리 알려져 사용되고있는 기술이기도 합니다.&lt;/p&gt;
&lt;p&gt;RESTfulAPI 는 앞서말한 REST의 규칙을 지키며 API 를 개발하는걸 뜻합니다.&lt;/p&gt;
&lt;p&gt;간단한 예시를 들어드리자면,&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2377807/151666397-8a8421b6-3542-4109-b299-2b259d53b898.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;구글이나 네이버를 잠깐 검색해봐도 주소창에는 뭔가의 규칙에 의해 나와있습니다.
규칙성은 없지만 구글검색엔진의 백엔드 API 네이밍 룰을 따르겠죠?&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;장점 : RESTful API는 그 자체만으로도 API의 목적이 쉽게 이해가 됩니다.
&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;단점 : 위의 구글 예시와같이 표준규약이 없어서 안티패턴으로 작성되는 경우가 흔합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt; 
 &lt;/p&gt;
&lt;h1 id=&#34;restfulapi&#34;&gt;RESTfulAPI&lt;/h1&gt;
&lt;p&gt;위에서 REST 에 대해 배워보았으니 RESTfulAPI 가 뭔지 알아야겠죠
REST 라는 원리를 이용하여 API 를 제작하는것을 RESTfulAPI 라 합니다.
모든 CRUD 기능을 POST로 처리 하는 API 혹은 URI 규칙을 올바르게 지키지 않은 API는 REST API를 사용하였지만 RESTful 하지 못한 시스템이라고 할 수 있습니다.&lt;/p&gt;
&lt;h1 id=&#34;rest-api-설계-가이드&#34;&gt;REST API 설계 가이드&lt;/h1&gt;
&lt;p&gt;이제 REST 와 RESTfulAPI 가 뭔지 알았으니, REST API 작성 규칙을 알아보고 RESTful 한 API 설계 방법을 알아봅시다.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;rest-api-설계-가이드---1&#34;&gt;REST API 설계 가이드 - 1&lt;/h2&gt;
&lt;p&gt;REST API 설계 시 가장 중요한 항목은 다음의 2가지로 요약할 수 있습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;URI는 정보의 자원을 표현해야 한다.&lt;/li&gt;
&lt;li&gt;자원에 대한 행위는 HTTP Method(GET, POST, PUT, DELETE)로 표현한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;HTTP Method&lt;/th&gt;
&lt;th&gt;역할&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;GET를 통해 해당 리소스를 조회합니다. 리소스를 조회하고 해당 도큐먼트에 대한 자세한 정보를 가져온다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;POST를 통해 해당 URI를 요청하면 리소스를 생성합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PUT&lt;/td&gt;
&lt;td&gt;PUT를 통해 해당 리소스를 수정합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DELETE&lt;/td&gt;
&lt;td&gt;DELETE를 통해 리소스를 삭제합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;rest-api-설계-가이드---2&#34;&gt;REST API 설계 가이드 - 2&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;URI는 동사보다는 명사를, 대문자보다는 소문자를 사용하여야 합니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Bad Example : https://heetaek.com/Learning
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Good Example : https://heetaek.com/learn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt; 
2. 마지막에 슬래시 ( / )를 포함하지 않습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Bad Example : https://heetaek.com/post/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Good Example : https://heetaek.com/post
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt; 
3. 언더바( _ ) 대신 하이폰( - )을 사용합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Bad Example : https://heetaek.com/handsome_heetaek
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Good Example : https://heetaek.com/handsome-heetaek
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt; 
4. 파일확장자는 URI에 포함하지 않습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Bad Example : https://heetaek.com/heetaek.png
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Good Example : https://cidk.xyz/photo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt; 
5. 행위를 포함하지 않습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Bad Example : https://heetaek.com/delete-post/3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Good Example : https://heetaek.com/post/3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Reference: &lt;a class=&#34;link&#34; href=&#34;https://gmlwjd9405.github.io/2018/09/21/rest-and-restful.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gmlwjd9405.github.io/2018/09/21/rest-and-restful.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>자료구조 on V8 Network</title>
    <link>https://v8.network/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</link>
    <description>Recent content in 자료구조 on V8 Network</description>
    <image>
      <url>https://v8.network/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://v8.network/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 13 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://v8.network/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[자료구조] 스택(Stack) 과 큐(Queue)</title>
      <link>https://v8.network/post/stack-queue/</link>
      <pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://v8.network/post/stack-queue/</guid>
      <description>스택 (Stack) 스택(Stack)은 &amp;lsquo;쌓다&amp;rsquo; 라는 의미로, 데이터를 쌓아 올린 형태의 자료구조이다.
접근 방법은 LIFO(Last In First Out) 라고 부르며, 마지막에 넣은 요소가 먼저 나온다는 의미다.
아래가 막혀있고 위가 뚫린 형태로 차곡차곡 쌓인다.
이러한 구조이기때문에 마지막에 삽입한 요소는 처음으로 삭제할 수 있다.
스택에서 삽입은 PUSH, 삭제는 POP 이라는 용어로 사용하고 있다.
실사용 예제 브라우저에서 뒤로 가기 문서작업에서 Ctrl + Z 실행취소 (undo) 후위 표기법 (컴퓨터가 어떤식으로 사칙 연산을 하는지 이해하는 용도) 큐(Queue) 큐는 단순히 스택의 반대 개념이다.</description>
    </item>
    
    <item>
      <title>[자료구조] 배열(Array) 과 리스트(List)</title>
      <link>https://v8.network/post/array-list/</link>
      <pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://v8.network/post/array-list/</guid>
      <description>Array (배열) 데이터가 많아지면 그룹 관리의 필요성이 생긴다. 이럴 때 사용하는 것이 배열이다. 하나의 변수에 여러 데이터를 담을 수 있다. 파이썬에서는 배열이라는게 없고 리스트가 배열 기능을 제공한다.
그래서 C로 예시를 들어보자면
int Array[5] = {13, 42, 33, 95, 11, 28} Index 0 1 2 3 4 5 Element 13 42 33 95 11 28 위의 표와 같이 Index 는 0 부터 시작하고 배열의 사이즈에 맞게 들어가는것을 볼 수 있다.
배열의 특징 미리 최대 크기를 지정해야 한다.</description>
    </item>
    
    <item>
      <title>[자료구조] 자료구조(Data Structure)란?</title>
      <link>https://v8.network/post/data-structure-algoithm/</link>
      <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://v8.network/post/data-structure-algoithm/</guid>
      <description>자료구조 (Data Structure) 자료구조란? 대량의 데이터를 효율적으로 관리할 수 있는 데이터 구조 특정한 상황에 놓인 문제를 해결하는 데에 특화되어있다. 많은 자료구조를 알아두면, 특정 문제를 해결하는 데에 상황에 가장 적합한 자료구조를 빠르게 찾아 데이터를 정리하고 활용하여 해결할 수 있다. 문제해결에 필요한 알고리즘과 밀접한 연관이 있다. 결국은 개발자가 문제해결을 하기 위해 배우는 것이다. 쉽게 말해,
자료는 도서관의 책들
구조는 도서관의 책들을 규칙에 따라 정리한 것.
이러면 조금 이해가 쉬울것같다.
왜 자료구조를 배워야할까? 데이터는 문자, 숫자, 사진, 소리 등 실생활을 구성하고 있는 모든 값이다.</description>
    </item>
    
  </channel>
</rss>

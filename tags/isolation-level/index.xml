<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>isolation level on 희택의 노력</title>
        <link>https://heetaek.com/tags/isolation-level/</link>
        <description>Recent content in isolation level on 희택의 노력</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko-kr</language>
        <lastBuildDate>Sun, 26 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://heetaek.com/tags/isolation-level/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>[데이터베이스] 트랜잭션 격리 수준(Transaction isolation Level)</title>
        <link>https://heetaek.com/p/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EA%B2%A9%EB%A6%AC-%EC%88%98%EC%A4%80transaction-isolation-level/</link>
        <pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate>
        
        <guid>https://heetaek.com/p/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EA%B2%A9%EB%A6%AC-%EC%88%98%EC%A4%80transaction-isolation-level/</guid>
        <description>&lt;img src="https://user-images.githubusercontent.com/2377807/181749234-419a017c-7eef-4373-ab51-c3464c6e490a.png" alt="Featured image of post [데이터베이스] 트랜잭션 격리 수준(Transaction isolation Level)" /&gt;&lt;h1 id=&#34;격리-수준isolation-level&#34;&gt;격리 수준(Isolation Level)&lt;/h1&gt;
&lt;p&gt;격리 수준이란 트랜잭션들끼리 일관된 데이터들을 얼마나 허용할것인지를 정하는 수준이다.&lt;/p&gt;
&lt;p&gt;쉽게 말해 동시에 데이터베이스에 접근할 때 그 접근을 어떻게 제어할지에 대한 설정이다.&lt;/p&gt;
&lt;p&gt;격리 수준에는 총 4가지의 수준이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read-Uncommitted (레벨 0)&lt;/li&gt;
&lt;li&gt;Read-Commited (레벨 1)&lt;/li&gt;
&lt;li&gt;Repeat-Read (레벨 2)&lt;/li&gt;
&lt;li&gt;Serializable (레벨 3)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;밑으로 갈 수록 격리 수준은 높아지지만 성능은 떨어진다.&lt;/p&gt;
&lt;p&gt;데이터 정확성과 성능이 반비례하므로 상황에 따라 잘 선택하는것이 중요하다.&lt;/p&gt;
&lt;h2 id=&#34;isolation-level-종류&#34;&gt;Isolation Level 종류&lt;/h2&gt;
&lt;h3 id=&#34;read-uncommitted-레벨-0&#34;&gt;Read-Uncommitted (레벨 0)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;SELECT 문장이 수행되는 동안 해당 데이터에 &lt;code&gt;Shared Lock이 걸리지 않는 계층&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;트랜잭션이 처리중이거나 아직 commit 되지않은 데이터를 다른 트랜잭션이 읽는 것을 허용한다.&lt;/li&gt;
&lt;li&gt;데이터베이스의 일관성을 유지하는 것이 불가능하다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Dirty Read&lt;/code&gt; 발생
&lt;ul&gt;
&lt;li&gt;A 트랜잭션에서 10번 유저의 나이를 28에서 29으로 바꾸고, 아직 커밋하지않았다.&lt;/li&gt;
&lt;li&gt;B 트랜잭션에서 10번 유저의 나이를 조회 : 결과 = 28 -&amp;gt; 더티 리드(Drity Read)
&lt;ul&gt;
&lt;li&gt;이후 A 트랜잭션에서 문제가 발생해 Rollback&lt;/li&gt;
&lt;li&gt;B 트랜잭션은 10번 유저가 여전히 29살이라 생각하고 로직을 수행&lt;/li&gt;
&lt;li&gt;이런식으로 데이터 정합성에 문제가 생긴다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;read-committed-레벨-1&#34;&gt;Read-Committed (레벨 1)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;SELECT 문장이 수행되는 동안 해당 데이터에 &lt;code&gt;Shard Lock이 걸리는 계층&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;트랜잭션이 수행되는 동안 다른 트랜잭션이 접근할 수 없어 대기하게 된다.&lt;/li&gt;
&lt;li&gt;commit 이루어진 트랜잭션만 조회가 가능하다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Non-Repeatable Read&lt;/code&gt; 발생
&lt;ul&gt;
&lt;li&gt;B 트랜잭션에서 10번 유저의 나이를 조회: 결과 28&lt;/li&gt;
&lt;li&gt;A 트랜잭션에서 10번 유저의 나이를 28에서 29로 바꾸고 commit&lt;/li&gt;
&lt;li&gt;B 트랜잭션에서 10번 유저의 나이를 조회 : 결과 29&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;repeat-read-레벨-2&#34;&gt;Repeat-Read (레벨 2)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;트랜잭션이 완료될 때까지 &lt;code&gt;SELECT 문장이 사용되는 모든 데이터에 Shared Lock이 걸리는 계층&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;트랜잭션이 범위 내에서 조회한 데이터 내용이 항상 동일함을 보장한다.&lt;/li&gt;
&lt;li&gt;다른 사용자는 트랜잭션 영역에 해당되는 데이터를 수정이 불가능하다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Phantom Read&lt;/code&gt; 발생&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;serializable-레벨-3&#34;&gt;Serializable (레벨 3)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;트랜잭션이 완료될 때까지 &lt;code&gt;SELECT 문장이 사용되는 모든 데이터에 Shard Lock이 걸리는 계층&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;가장 엄격한 격리 수준으로 완벽한 읽기 모드를 제공한다.&lt;/li&gt;
&lt;li&gt;다른 사용자는 트랜잭션에 영역에 해당되는 데이터를 수정 및 입력이 불가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;일반적인 온라인 서비스에서는 &lt;code&gt;Read Commited&lt;/code&gt; 나 &lt;code&gt;Repeat-Read&lt;/code&gt; 중 하나를 사용한다&lt;/p&gt;
&lt;p&gt;오라클을 포함한 대부분의 DBMS 는 &lt;code&gt;Read-Commited&lt;/code&gt; 이 기본 레벨이고,&lt;/p&gt;
&lt;p&gt;MySQL 은 기본 레벨은 &lt;code&gt;Repeat-Read&lt;/code&gt; 이다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;레벨-별-허용되는-이상-현상&#34;&gt;레벨 별 허용되는 이상 현상&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Isolation Level&lt;/th&gt;
&lt;th&gt;Dirty Read&lt;/th&gt;
&lt;th&gt;Non-Repeatable Read&lt;/th&gt;
&lt;th&gt;Phantom Read&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Read Uncommitted(Level 0)&lt;/td&gt;
&lt;td&gt;허용&lt;/td&gt;
&lt;td&gt;허용&lt;/td&gt;
&lt;td&gt;허용&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read Committed(Level 1)&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;허용&lt;/td&gt;
&lt;td&gt;허용&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Repeat-Read(Level 2)&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;허용&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Serializable(Level 3)&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;그럼 &lt;code&gt;Dirty Read&lt;/code&gt; , &lt;code&gt;Non-Repeatable Read&lt;/code&gt;, &lt;code&gt;Phantom Read&lt;/code&gt; 가 뭔지 알아보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Dirty Read&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;어떤 트랜잭션에서 아직 실행이 끝나지 않은 다른 트랜잭션에 의한 변경사항을 보게되는 경우.&lt;/li&gt;
&lt;li&gt;커밋되지 않은 수정중인 데이터를 다른 트랜잭션에서 &lt;code&gt;읽을 수&lt;/code&gt; 있도록 허용할 때 발생하는 현상&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Non-Repeatable Read&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;한 트랜잭션에서 같은 쿼리를 두 번 수행할 떄 그 사이에 다른 트랜잭션 값을 &lt;code&gt;수정 또는 삭제&lt;/code&gt;하면서 두 쿼리의 결과가 다르게 나타나는 일관성이 깨진 현상&lt;/li&gt;
&lt;li&gt;한 트랜잭션에서 똑같은 SELECT 를 수행했을 때 항상 같은 결과를 반환해야한다는 Repeatable Read 정합성에 어긋난다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Phantom Read&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;한 트랜잭션 안에서 일정 범위의 레코드를 두 번 읽었을 때, 첫 번째 쿼리에서 없던 레코드가 두 번째 쿼리에서 나타나는 현상&lt;/li&gt;
&lt;li&gt;트랜잭션 도중 새로운 레코드 &lt;code&gt;삽입&lt;/code&gt;을 허용하기 때문에 나타난다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;이렇게 격리 수준 레벨에 대한 이론적인것을 살펴보았지만,&lt;/p&gt;
&lt;p&gt;실제 실무에서는 어떻게 다뤄질지 전혀 감이 잡히지 않는다.&lt;/p&gt;
&lt;p&gt;아직은 어려운 주제인것같다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Reference&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=e9PC0sroCzc&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=e9PC0sroCzc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://devjem.tistory.com/27&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://devjem.tistory.com/27&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wonit.tistory.com/463?category=790502&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wonit.tistory.com/463?category=790502&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
